.\" Manual for ZWC
.\" Copyright (C) 2023 Ethan Cheng
.\"
.\" This file is part of ZWC.
.\"
.\" ZWC is free software: you can redistribute it and/or modify it under the
.\" terms of the GNU General Public License as published by the Free Software
.\" Foundation, version 3 of the License.
.\"
.\" ZWC is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
.\" details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with ZWC. If not, see <https://www.gnu.org/licenses/>.
.TH ZWC 1 2023-03-29 "ZWC v0.0.1" "ZWC Manual"
.SH NAME
zwc \- encodes/decodes data into zero-width characters
.SH SYNOPSIS
\fBzwc\fR \fIsubcommand\fR [\fIargs\fR]
.SH DESCRIPTION
.PP
\fBzwc\fR is a program for encoding arbritary data into zero-width utf-8
characters and decoding it back. These zero-width characters are not rendered
as visible chracters. These zero-width characters are then placed inside a
message, hiding the data within the message.
.PP
\fImessage\fR refers to the utf-8 text which will be visible to viewers.
\fIdata\fR is the data to be encoded into zero-width utf-8 characters and
inserted into the \fImessage\fR. \fItext\fR is the final product with the
encoded \fIdata\fR hidden in the \fImessage\fR.
.SH SUBCOMMAND
Each subcommand can be abbreviated. For example, \fBe\fR, \fBen\fR, \fBenc\fR, etc. can be
used to specify the \fBencode\fR subcommand.
.SS encode\fR [\fB\-d\fR \fIdata\fR] [\fB\-m\fR \fImessage\fR] [\fB\-inr\fR] [\fB\-c\fR \fIchecksum\fR] [\fB\-e\fR \fIencoding\fR]
\fBzwc\fR takes \fIdata\fR, encodes it into zero-width characters, and inserts
it into \fImessage\fR. The resulting text is sent to standard output.
.PP
\fBOptions\fR
.TP
\fB\-d\fR \fIdata\fR
Specifies the data file to read from.
.TP
\fB\-m\fR \fImessage\fR
Specifies the message file to read from.
.TP
\fB\-i\fR
When neither \fIdata\fR or \fImessage\fR are supplied, this option allows the
user to interactively supply both the data and message from stdin. Otherwise,
this option has no effect.
.TP
\fB\-n\fR
Do not intersperse the encoded data within a message.
.TP
\fB\-c\fR \fIchecksum\fR
Specifies the checksum to use when encoding the message. Valid arguments are:
none, crc8, crc16, crc32, crc64, md5, sha256.
.TP
\fB\-r\fR
Use Reed-Solomon error correction. When this option is used, checksum defaults
to "none".
.TP
\fB\-e\fR \fIencoding\fR
Choose which encoding for the data to use. Valid arguments are: 2bit, 3bit, 4bit.
.SS decode\fR [\fB\-t\fR \fItext\fR] [\fB\-m\fR] [\fB\-f\fR \fIencoding\fR]...
\fBzwc\fR takes \fItext\fR, decodes the hidden data, and sends that data to standard output.
.PP
\fBOptions\fR
.TP
\fB\-t\fR \fItext\fR
Specifies the text file to read from.
.TP
\fB\-m\fR
Outputs the message instead of the data.
.TP
\fB\-f\fR \fIencoding\fR
Force \fBzwc\fR to interpret the encoding of the data as \fIencoding\fR, even if
the header says otherwise. Valid values for \fIencoding\fR are: 2bit, 3bit, 4bit, rs.
.SS test\fR [\fB\-t\fR \fItext\fR] [\fB\-f\fR \fIencoding\fR]...
Shares the same options and behavior as the "decode" subcommand but doesn't
output the decoded data to standard output and the \fB\-m\fR option has no effect.
.SS help\fR [\fIsubcommand\fR]
Display help information and subcommand usage.
.SS version
Displays program version, file format specification version, and copyright info.
.SH OPTIONS
Options which are common to all subcommands.
.TP
\fB\-v\fR
Verbosely explain what is happening. Specify twice for more verbose output.
.TP
\fB\-q\fR
Suppress warnings.
.TP
\fB\-s\fR
Silence errors and warnings.
.SH EXIT STATUS
.TP
\fB0\fR
Success
.TP
\fB1\fR
Minor errors
.TP
\fB2\fR
Major errors
.SH NOTES
There are three encodings that may be used. 2 bit encoding uses 4 zero-width
characters (not including the delimiter character) to encode the data. This
means each character represents 2 bits of data. 3 bit encoding uses 8
characters each representing 3 bits of data. 4 bit encoding uses 16 characters
each representing 4 bits of data. Using a denser encoding is more efficient
in terms of encoded data size but may cause more issues because there are more
characters being used which can potentially interfere with the message
(depending on the language of the message).
.PP
When decoding, if there are multiple files within the same message, they will
be concatenated and a warning will be issued. If the encoded checksum differs
from the one specified in the header, the checksum of the appropriate length is
tried and a warning is issued.
.SH CAVEATS
The message may not contain any of the zero-width characters used to encode the data.
To see which zero-width characters are used for each encoding type, refer to the
specification found in the project page.
.PP
When pasting into the terminal, the maximum line length is 4096 chars and
anything after that is discarded. This ensures that the terminal can always
receive more input until at least one line can be read, but as a consequence,
\fBzwc\fR will be unable to read the discarded characters. If this is the case,
use a file or a pipe instead of the terminal.
.SH BUGS
For now, only utf-8 is supported.
.PP
This program currently can\'t parse the argument \'\-\' as stdin/stdout. In
addition, if data is read from stdin in encode mode, \fBzwc\fR will not spread
out the encoded data in the message because it can't get the size of the input
stream.
.SH EXAMPLES
\fB$ zwc encode -d data\fR
.PP
Encodes data from file named "data", reads message from stdin, and outputs text
to stdout

\fB$ zwc encode -m message\fR
.PP
Encodes data from stdin, reads message from file named "message", and outputs
text to stdout

\fB$ zwc encode -d data -m message\fR
.PP
Encodes data from file named "data", reads message from file named "message",
and outputs text to stdout

\fB$ zwc decode -t text\fR
.PP
Reads text from file named "text" and outputs the decoded data to stdout

\fB$ zwc decode\fR
.PP
Reads text from stdin and outputs the decoded data to stdout
.SH AUTHOR
This program and accompanying manual were written by Ethan Cheng <ethanrc0528@gmail.com>
.SH REPORTING BUGS
Report bugs to https://github.com/yadayadajaychan/zwc/issues
.SH COPYRIGHT
Copyright (C) 2023 Ethan Cheng
.br
License GPLv3: GNU GPL version 3 <http://gnu.org/licenses/gpl.html>
.br
This is free software: you are free to change and redistribute it.
.br
There is NO WARRANTY, to the extent permitted by law.
.SH SEE ALSO
Project page: https://github.com/yadayadajaychan/zwc
